<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="506" onload="init(evt)" version="1.1" viewBox="0 0 1200 506"><defs><linearGradient id="background" x1="0" x2="0" y1="0" y2="1"><stop offset="5%" stop-color="#eee"/><stop offset="95%" stop-color="#eeeeb0"/></linearGradient></defs><style type="text/css">text { font-family:&quot;Verdana&quot;; font-size:12px; fill:rgb(0,0,0); } #title { text-anchor:middle; font-size:17px; } #search { opacity:0.1; cursor:pointer; } #search:hover, #search.show { opacity:1; } #subtitle { text-anchor:middle; font-color:rgb(160,160,160); } #unzoom { cursor:pointer; } #frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; } .hide { display:none; } .parent { opacity:0.5; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect width="100%" height="506" x="0" y="0" fill="url(#background)"/><text id="title" x="50%" y="24">./venv/bin/py-spy record -o ./docs/_static/glances-flame.svg -d 60 -s --pid 2656063</text><text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text><text id="search" x="1090" y="24">Search</text><svg id="frames" width="1180" x="10"><g><title>_bootstrap (threading.py:890) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="0%" y="84" fill="#E30007"/></g><g><title>_bootstrap_inner (threading.py:932) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="0%" y="100" fill="#D90018"/></g><g><title>run (glances/plugins/glances_ports.py:246) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="0%" y="116" fill="#DDC136"/></g><g><title>update (glances/plugins/glances_diskio.py:106) (1 samples, 0.18%)</title><rect width=".182%" height="15" x=".545%" y="244" fill="#F8D406"/></g><g><title>is_hide (glances/plugins/glances_plugin.py:869) (1 samples, 0.18%)</title><rect width=".182%" height="15" x=".545%" y="260" fill="#D04423"/></g><g><title>&lt;listcomp&gt; (glances/plugins/glances_plugin.py:869) (1 samples, 0.18%)</title><rect width=".182%" height="15" x=".545%" y="276" fill="#E88000"/></g><g><title>match (re.py:191) (1 samples, 0.18%)</title><rect width=".182%" height="15" x=".545%" y="292" fill="#CFA02F"/></g><g><title>disk_io_counters (psutil/__init__.py:2059) (2 samples, 0.36%)</title><rect width=".364%" height="15" x=".727%" y="260" fill="#E41722"/></g><g><title>disk_io_counters (psutil/_pslinux.py:1166) (2 samples, 0.36%)</title><rect width=".364%" height="15" x=".727%" y="276" fill="#DA1E1A"/></g><g><title>read_procfs (psutil/_pslinux.py:1118) (2 samples, 0.36%)</title><rect width=".364%" height="15" x=".727%" y="292" fill="#DC7A13"/></g><g><title>run (psutil/_common.py:648) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="1.091%" y="292" fill="#FAE42A"/></g><g><title>_remove_dead_reminders (psutil/_common.py:632) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="1.091%" y="308" fill="#F0C11C"/></g><g><title>run (psutil/_common.py:667) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="1.273%" y="292" fill="#D81425"/></g><g><title>disk_io_counters (psutil/__init__.py:2063) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="1.091%" y="260" fill="#CEBC27"/></g><g><title>wrap_numbers (psutil/_common.py:702) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="1.091%" y="276" fill="#D9CF0D"/></g><g><title>run (psutil/_common.py:671) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="1.454%" y="292" fill="#E74926"/></g><g><title>update (glances/plugins/glances_diskio.py:89) (8 samples, 1.45%)</title><rect width="1.454%" height="15" x=".727%" y="244" fill="#E1142E"/></g><g><title>disk_io_counters (psutil/__init__.py:2067) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2%" y="260" fill="#D21F29"/></g><g><title>get_environ_proxies (requests/utils.py:776) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.182%" y="372" fill="#DDC82F"/></g><g><title>should_bypass_proxies (requests/utils.py:760) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.182%" y="388" fill="#E21A05"/></g><g><title>proxy_bypass_environment (urllib/request.py:2529) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.182%" y="404" fill="#F9211A"/></g><g><title>getproxies_environment (urllib/request.py:2512) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.182%" y="420" fill="#EBB71C"/></g><g><title>__iter__ (_collections_abc.py:743) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.182%" y="436" fill="#DD0526"/></g><g><title>__iter__ (os.py:697) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.182%" y="452" fill="#F7122A"/></g><g><title>decode (os.py:753) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.182%" y="468" fill="#F1832D"/></g><g><title>request (requests/sessions.py:532) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="2.182%" y="340" fill="#F91F1D"/></g><g><title>merge_environment_settings (requests/sessions.py:711) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="2.182%" y="356" fill="#E16F35"/></g><g><title>get_environ_proxies (requests/utils.py:779) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.364%" y="372" fill="#EEA011"/></g><g><title>getproxies_environment (urllib/request.py:2502) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.364%" y="388" fill="#D69430"/></g><g><title>__iter__ (_collections_abc.py:743) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.364%" y="404" fill="#E82431"/></g><g><title>update (glances/plugins/glances_docker.py:186) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="2.182%" y="244" fill="#D16718"/></g><g><title>version (docker/client.py:207) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="2.182%" y="260" fill="#E55808"/></g><g><title>version (docker/api/daemon.py:181) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="2.182%" y="276" fill="#D5B513"/></g><g><title>inner (docker/utils/decorators.py:46) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="2.182%" y="292" fill="#FEBF36"/></g><g><title>_get (docker/api/client.py:237) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="2.182%" y="308" fill="#F15325"/></g><g><title>get (requests/sessions.py:555) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="2.182%" y="324" fill="#E92427"/></g><g><title>request (requests/sessions.py:542) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="340" fill="#E20336"/></g><g><title>send (requests/sessions.py:655) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="356" fill="#F5C028"/></g><g><title>send (requests/adapters.py:439) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="372" fill="#EEA71D"/></g><g><title>urlopen (urllib3/connectionpool.py:699) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="388" fill="#E8B633"/></g><g><title>_make_request (urllib3/connectionpool.py:440) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="404" fill="#E73C27"/></g><g><title>getresponse (http/client.py:1347) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="420" fill="#D0450C"/></g><g><title>begin (http/client.py:338) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="436" fill="#EB5D25"/></g><g><title>get (email/message.py:470) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.546%" y="452" fill="#D57427"/></g><g><title>update (glances/plugins/glances_ip.py:85) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="2.727%" y="244" fill="#DECF1D"/></g><g><title>update (glances/plugins/glances_ip.py:86) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="2.909%" y="244" fill="#CE601E"/></g><g><title>update (glances/plugins/glances_ip.py:88) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="3.636%" y="244" fill="#DA8A04"/></g><g><title>update (glances/plugins/glances_mem.py:82) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4%" y="244" fill="#FABF0E"/></g><g><title>virtual_memory (psutil/__init__.py:1963) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4%" y="260" fill="#EF3C28"/></g><g><title>virtual_memory (psutil/_pslinux.py:435) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4%" y="276" fill="#CE1B30"/></g><g><title>update (glances/plugins/glances_percpu.py:65) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4.182%" y="244" fill="#E12308"/></g><g><title>process_iter (psutil/__init__.py:1425) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4.364%" y="292" fill="#FAD518"/></g><g><title>pids (psutil/__init__.py:1365) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4.364%" y="308" fill="#F77B16"/></g><g><title>pids (psutil/_pslinux.py:1512) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4.364%" y="324" fill="#E78A26"/></g><g><title>&lt;listcomp&gt; (psutil/_pslinux.py:1512) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4.364%" y="340" fill="#E7912E"/></g><g><title>is_running (psutil/__init__.py:568) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="4.545%" y="308" fill="#FB760B"/></g><g><title>_init (psutil/__init__.py:337) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="5.273%" y="340" fill="#D99319"/></g><g><title>_init (psutil/__init__.py:341) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="5.455%" y="340" fill="#F75125"/></g><g><title>_init (psutil/__init__.py:342) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="5.636%" y="340" fill="#D10C26"/></g><g><title>_init (psutil/__init__.py:345) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="5.818%" y="340" fill="#E30109"/></g><g><title>_init (psutil/__init__.py:348) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="6%" y="340" fill="#F82F2B"/></g><g><title>__init__ (psutil/_pslinux.py:1599) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="6%" y="356" fill="#DD0A1E"/></g><g><title>get_procfs_path (psutil/_common.py:750) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="6%" y="372" fill="#D2E501"/></g><g><title>_parse_stat_file (psutil/_pslinux.py:1618) (10 samples, 1.82%)</title><rect width="1.818%" height="15" x="6.545%" y="436" fill="#DE9425"/><text x="6.795%" y="446.5">_..</text></g><g><title>open_binary (psutil/_common.py:711) (10 samples, 1.82%)</title><rect width="1.818%" height="15" x="6.545%" y="452" fill="#EA4321"/><text x="6.795%" y="462.5">o..</text></g><g><title>create_time (psutil/_pslinux.py:1788) (29 samples, 5.27%)</title><rect width="5.273%" height="15" x="6.182%" y="388" fill="#F76223"/><text x="6.432%" y="398.5">create..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (29 samples, 5.27%)</title><rect width="5.273%" height="15" x="6.182%" y="404" fill="#F78A34"/><text x="6.432%" y="414.5">wrappe..</text></g><g><title>wrapper (psutil/_common.py:450) (28 samples, 5.09%)</title><rect width="5.091%" height="15" x="6.364%" y="420" fill="#D54F1E"/><text x="6.614%" y="430.5">wrappe..</text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1619) (17 samples, 3.09%)</title><rect width="3.091%" height="15" x="8.364%" y="436" fill="#F6B117"/><text x="8.614%" y="446.5">_pa..</text></g><g><title>_init (psutil/__init__.py:354) (30 samples, 5.45%)</title><rect width="5.455%" height="15" x="6.182%" y="340" fill="#E63E1B"/><text x="6.432%" y="350.5">_init (..</text></g><g><title>create_time (psutil/__init__.py:710) (30 samples, 5.45%)</title><rect width="5.455%" height="15" x="6.182%" y="356" fill="#D89A08"/><text x="6.432%" y="366.5">create_..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (30 samples, 5.45%)</title><rect width="5.455%" height="15" x="6.182%" y="372" fill="#F4232D"/><text x="6.432%" y="382.5">wrapper..</text></g><g><title>create_time (psutil/_pslinux.py:1794) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="11.454%" y="388" fill="#FB730C"/></g><g><title>process_iter (psutil/__init__.py:1443) (40 samples, 7.27%)</title><rect width="7.273%" height="15" x="4.545%" y="292" fill="#F03632"/><text x="4.795%" y="302.5">process_it..</text></g><g><title>is_running (psutil/__init__.py:581) (39 samples, 7.09%)</title><rect width="7.091%" height="15" x="4.727%" y="308" fill="#E95434"/><text x="4.977%" y="318.5">is_running..</text></g><g><title>__init__ (psutil/__init__.py:326) (37 samples, 6.73%)</title><rect width="6.727%" height="15" x="5.091%" y="324" fill="#CF752F"/><text x="5.341%" y="334.5">__init__ ..</text></g><g><title>_init (psutil/__init__.py:374) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="11.636%" y="340" fill="#F92B27"/></g><g><title>process_iter (psutil/__init__.py:1444) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="11.818%" y="292" fill="#D1262C"/></g><g><title>as_dict (psutil/__init__.py:505) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="12.364%" y="308" fill="#ECD417"/></g><g><title>as_dict (psutil/__init__.py:509) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="12.546%" y="308" fill="#F24F15"/></g><g><title>as_dict (psutil/__init__.py:511) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="12.727%" y="308" fill="#D36023"/></g><g><title>__enter__ (contextlib.py:111) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="13.091%" y="324" fill="#FDD728"/></g><g><title>oneshot (psutil/__init__.py:475) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="13.273%" y="340" fill="#D35115"/></g><g><title>__enter__ (contextlib.py:113) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="13.273%" y="324" fill="#D0BE26"/></g><g><title>oneshot (psutil/__init__.py:484) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="13.636%" y="340" fill="#EBD526"/></g><g><title>oneshot_enter (psutil/_pslinux.py:1662) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="13.636%" y="356" fill="#ED7A26"/></g><g><title>cache_activate (psutil/_common.py:457) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="14%" y="372" fill="#F4DA23"/></g><g><title>as_dict (psutil/__init__.py:518) (8 samples, 1.45%)</title><rect width="1.454%" height="15" x="12.909%" y="308" fill="#F0442F"/></g><g><title>helper (contextlib.py:240) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="14.182%" y="324" fill="#D21035"/></g><g><title>as_dict (psutil/__init__.py:519) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="14.364%" y="308" fill="#EB7C0C"/></g><g><title>as_dict (psutil/__init__.py:522) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="14.546%" y="308" fill="#E0A90B"/></g><g><title>pid (psutil/__init__.py:423) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="14.546%" y="324" fill="#FAA602"/></g><g><title>as_dict (psutil/__init__.py:524) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="14.727%" y="308" fill="#F2D81D"/></g><g><title>cmdline (psutil/_pslinux.py:1696) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="15.636%" y="356" fill="#E6741B"/></g><g><title>open_text (psutil/_common.py:725) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="15.636%" y="372" fill="#E46330"/></g><g><title>cmdline (psutil/__init__.py:677) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="15.454%" y="324" fill="#FD0B06"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="15.454%" y="340" fill="#F78F27"/></g><g><title>cmdline (psutil/_pslinux.py:1715) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="15.818%" y="356" fill="#EC610A"/></g><g><title>cpu_percent (psutil/__init__.py:1007) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16%" y="324" fill="#E9D013"/></g><g><title>cpu_percent (psutil/__init__.py:1032) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="16.182%" y="324" fill="#D8A402"/></g><g><title>cpu_percent (psutil/__init__.py:980) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16.546%" y="324" fill="#DC8105"/></g><g><title>cpu_count (psutil/__init__.py:1576) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16.546%" y="340" fill="#F2110A"/></g><g><title>cpu_count_logical (psutil/_pslinux.py:633) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16.546%" y="356" fill="#F26B00"/></g><g><title>cpu_percent (psutil/__init__.py:995) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16.727%" y="324" fill="#FB1C1F"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16.727%" y="340" fill="#E9DF0A"/></g><g><title>cpu_times (psutil/_pslinux.py:1775) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16.727%" y="356" fill="#D7151B"/></g><g><title>cpu_percent (psutil/__init__.py:996) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="16.909%" y="324" fill="#E81715"/></g><g><title>gids (psutil/_pslinux.py:2152) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="17.273%" y="356" fill="#F40517"/></g><g><title>gids (psutil/_pslinux.py:2153) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="17.454%" y="356" fill="#E2512E"/></g><g><title>gids (psutil/__init__.py:739) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="17.091%" y="324" fill="#F7461E"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="17.273%" y="340" fill="#D44413"/></g><g><title>gids (psutil/_pslinux.py:2154) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="18%" y="356" fill="#F0BB0D"/></g><g><title>io_counters (psutil/_pslinux.py:1740) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="18.364%" y="356" fill="#DF711A"/></g><g><title>open_binary (psutil/_common.py:711) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="18.364%" y="372" fill="#CEC002"/></g><g><title>io_counters (psutil/_pslinux.py:1741) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="19.273%" y="356" fill="#F16C04"/></g><g><title>io_counters (psutil/_pslinux.py:1744) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="19.818%" y="356" fill="#F7AD31"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (12 samples, 2.18%)</title><rect width="2.182%" height="15" x="18.182%" y="340" fill="#E07223"/><text x="18.432%" y="350.5">w..</text></g><g><title>io_counters (psutil/_pslinux.py:1751) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="20%" y="356" fill="#F59F1B"/></g><g><title>__init__ (psutil/_common.py:279) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="21.091%" y="372" fill="#F5AC2C"/></g><g><title>__init__ (psutil/_common.py:338) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="20.909%" y="356" fill="#EC170B"/></g><g><title>__init__ (psutil/_common.py:280) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="21.273%" y="372" fill="#CD7526"/></g><g><title>io_counters (psutil/__init__.py:763) (19 samples, 3.45%)</title><rect width="3.454%" height="15" x="18.182%" y="324" fill="#ED4819"/><text x="18.432%" y="334.5">io_..</text></g><g><title>wrapper (psutil/_pslinux.py:1578) (7 samples, 1.27%)</title><rect width="1.273%" height="15" x="20.364%" y="340" fill="#F44609"/></g><g><title>__init__ (psutil/_common.py:344) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="21.454%" y="356" fill="#D97D27"/></g><g><title>memory_percent (psutil/__init__.py:1103) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="21.636%" y="324" fill="#EB240A"/></g><g><title>name (psutil/__init__.py:617) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="21.818%" y="324" fill="#FB7B2F"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="21.818%" y="340" fill="#DD0D0D"/></g><g><title>name (psutil/__init__.py:618) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="22.364%" y="324" fill="#EE8309"/></g><g><title>cmdline (psutil/_pslinux.py:1696) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="22.727%" y="372" fill="#D33208"/></g><g><title>open_text (psutil/_common.py:725) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="22.727%" y="388" fill="#F5B618"/></g><g><title>name (psutil/__init__.py:624) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="22.546%" y="324" fill="#F20E25"/></g><g><title>cmdline (psutil/__init__.py:677) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="22.546%" y="340" fill="#F6E40C"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="22.546%" y="356" fill="#D5370F"/></g><g><title>cmdline (psutil/_pslinux.py:1697) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="23.273%" y="372" fill="#D10903"/></g><g><title>name (psutil/__init__.py:629) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="23.636%" y="324" fill="#E63B1E"/></g><g><title>basename (posixpath.py:144) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="23.636%" y="340" fill="#D17915"/></g><g><title>nice (psutil/__init__.py:720) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="23.818%" y="324" fill="#DC6D0D"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="23.818%" y="340" fill="#E81201"/></g><g><title>nice_get (psutil/_pslinux.py:1988) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="24%" y="356" fill="#D7292A"/></g><g><title>wrapper (psutil/_common.py:451) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="25.273%" y="388" fill="#E07B24"/></g><g><title>_read_status_file (psutil/_pslinux.py:1649) (9 samples, 1.64%)</title><rect width="1.636%" height="15" x="25.454%" y="404" fill="#F07D03"/></g><g><title>open_binary (psutil/_common.py:711) (8 samples, 1.45%)</title><rect width="1.454%" height="15" x="25.636%" y="420" fill="#CD6232"/></g><g><title>num_threads (psutil/_pslinux.py:1950) (25 samples, 4.55%)</title><rect width="4.545%" height="15" x="24.727%" y="356" fill="#CDB925"/><text x="24.977%" y="366.5">num_t..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (25 samples, 4.55%)</title><rect width="4.545%" height="15" x="24.727%" y="372" fill="#EECF0F"/><text x="24.977%" y="382.5">wrapp..</text></g><g><title>wrapper (psutil/_common.py:454) (21 samples, 3.82%)</title><rect width="3.818%" height="15" x="25.454%" y="388" fill="#D5C72A"/><text x="25.704%" y="398.5">wrap..</text></g><g><title>_read_status_file (psutil/_pslinux.py:1650) (12 samples, 2.18%)</title><rect width="2.182%" height="15" x="27.091%" y="404" fill="#EBC90B"/><text x="27.341%" y="414.5">_..</text></g><g><title>num_threads (psutil/__init__.py:860) (33 samples, 6.00%)</title><rect width="6%" height="15" x="24.364%" y="324" fill="#CF2E0B"/><text x="24.614%" y="334.5">num_thre..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (33 samples, 6.00%)</title><rect width="6%" height="15" x="24.364%" y="340" fill="#F12323"/><text x="24.614%" y="350.5">wrapper ..</text></g><g><title>num_threads (psutil/_pslinux.py:1951) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="29.273%" y="356" fill="#F3202F"/></g><g><title>_parse_stat_file (psutil/_pslinux.py:1618) (11 samples, 2.00%)</title><rect width="2%" height="15" x="31.091%" y="404" fill="#F7CA17"/><text x="31.341%" y="414.5">_..</text></g><g><title>open_binary (psutil/_common.py:711) (9 samples, 1.64%)</title><rect width="1.636%" height="15" x="31.454%" y="420" fill="#DB660B"/></g><g><title>_parse_stat_file (psutil/_pslinux.py:1619) (11 samples, 2.00%)</title><rect width="2%" height="15" x="33.091%" y="404" fill="#F36E2C"/><text x="33.341%" y="414.5">_..</text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1623) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="35.091%" y="404" fill="#DE4A36"/></g><g><title>status (psutil/__init__.py:682) (28 samples, 5.09%)</title><rect width="5.091%" height="15" x="30.364%" y="324" fill="#D8630C"/><text x="30.614%" y="334.5">status..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (27 samples, 4.91%)</title><rect width="4.909%" height="15" x="30.546%" y="340" fill="#E2161A"/><text x="30.796%" y="350.5">wrappe..</text></g><g><title>status (psutil/_pslinux.py:2080) (27 samples, 4.91%)</title><rect width="4.909%" height="15" x="30.546%" y="356" fill="#D9A30A"/><text x="30.796%" y="366.5">status..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (26 samples, 4.73%)</title><rect width="4.727%" height="15" x="30.727%" y="372" fill="#D51935"/><text x="30.977%" y="382.5">wrappe..</text></g><g><title>wrapper (psutil/_common.py:454) (26 samples, 4.73%)</title><rect width="4.727%" height="15" x="30.727%" y="388" fill="#FC691A"/><text x="30.977%" y="398.5">wrappe..</text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1628) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="35.273%" y="404" fill="#DC272B"/></g><g><title>username (psutil/__init__.py:697) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="35.455%" y="324" fill="#E54430"/></g><g><title>wrapper (psutil/_common.py:447) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="35.818%" y="324" fill="#FC0820"/></g><g><title>wrapper (psutil/_common.py:451) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="36.182%" y="324" fill="#DF142B"/></g><g><title>cpu_times (psutil/__init__.py:1043) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="36.909%" y="340" fill="#E55131"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="36.909%" y="356" fill="#EC1C24"/></g><g><title>cpu_times (psutil/_pslinux.py:1770) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="36.909%" y="372" fill="#F9B91A"/></g><g><title>memory_info (psutil/_pslinux.py:1810) (14 samples, 2.55%)</title><rect width="2.546%" height="15" x="37.455%" y="372" fill="#F9AE21"/><text x="37.705%" y="382.5">me..</text></g><g><title>open_binary (psutil/_common.py:711) (12 samples, 2.18%)</title><rect width="2.182%" height="15" x="37.818%" y="388" fill="#E9C925"/><text x="38.068%" y="398.5">o..</text></g><g><title>memory_info (psutil/_pslinux.py:1812) (7 samples, 1.27%)</title><rect width="1.273%" height="15" x="40%" y="372" fill="#DD4E1A"/></g><g><title>&lt;listcomp&gt; (psutil/_pslinux.py:1812) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="40.545%" y="388" fill="#FA7F1E"/></g><g><title>memory_info (psutil/__init__.py:1054) (24 samples, 4.36%)</title><rect width="4.364%" height="15" x="37.273%" y="340" fill="#E6312C"/><text x="37.523%" y="350.5">memor..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (24 samples, 4.36%)</title><rect width="4.364%" height="15" x="37.273%" y="356" fill="#E54317"/><text x="37.523%" y="366.5">wrapp..</text></g><g><title>memory_info (psutil/_pslinux.py:1813) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="41.273%" y="372" fill="#F9532F"/></g><g><title>as_dict (psutil/__init__.py:525) (148 samples, 26.91%)</title><rect width="26.909%" height="15" x="15.091%" y="308" fill="#D72B03"/><text x="15.341%" y="318.5">as_dict (psutil/__init__.py:525)</text></g><g><title>wrapper (psutil/_common.py:454) (31 samples, 5.64%)</title><rect width="5.636%" height="15" x="36.364%" y="324" fill="#EE9A0D"/><text x="36.614%" y="334.5">wrapper..</text></g><g><title>ppid (psutil/__init__.py:605) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="41.636%" y="340" fill="#DB3802"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="41.636%" y="356" fill="#E90004"/></g><g><title>ppid (psutil/_pslinux.py:2142) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="41.636%" y="372" fill="#EB1E07"/></g><g><title>wrapper (psutil/_pslinux.py:1576) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="41.636%" y="388" fill="#FA4F0D"/></g><g><title>oneshot (psutil/__init__.py:488) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="42.182%" y="340" fill="#D39222"/></g><g><title>cache_deactivate (psutil/_common.py:466) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="42.182%" y="356" fill="#E41626"/></g><g><title>oneshot (psutil/__init__.py:489) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="42.364%" y="340" fill="#EBA805"/></g><g><title>update (glances/processes.py:292) (213 samples, 38.73%)</title><rect width="38.727%" height="15" x="4.364%" y="260" fill="#DD9B10"/><text x="4.614%" y="270.5">update (glances/processes.py:292)</text></g><g><title>&lt;listcomp&gt; (glances/processes.py:292) (213 samples, 38.73%)</title><rect width="38.727%" height="15" x="4.364%" y="276" fill="#D7D735"/><text x="4.614%" y="286.5">&lt;listcomp&gt; (glances/processes.py:292)</text></g><g><title>process_iter (psutil/__init__.py:1445) (170 samples, 30.91%)</title><rect width="30.909%" height="15" x="12.182%" y="292" fill="#DF040A"/><text x="12.432%" y="302.5">process_iter (psutil/__init__.py:1445)</text></g><g><title>as_dict (psutil/__init__.py:535) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="42%" y="308" fill="#EA6706"/></g><g><title>__exit__ (contextlib.py:120) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="42.182%" y="324" fill="#E36100"/></g><g><title>oneshot (psutil/__init__.py:492) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="42.545%" y="340" fill="#EA9635"/></g><g><title>oneshot_exit (psutil/_pslinux.py:1665) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="42.909%" y="356" fill="#E4C936"/></g><g><title>update (glances/processes.py:303) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.091%" y="260" fill="#DE1625"/></g><g><title>sort_stats (glances/processes.py:518) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.091%" y="276" fill="#ED3520"/></g><g><title>update (glances/processes.py:308) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="43.273%" y="260" fill="#E91935"/></g><g><title>update_processcount (glances/processes.py:123) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="43.273%" y="276" fill="#D22822"/></g><g><title>&lt;lambda&gt; (glances/processes.py:123) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.455%" y="292" fill="#F1DC2C"/></g><g><title>update (glances/plugins/glances_processcount.py:75) (217 samples, 39.45%)</title><rect width="39.455%" height="15" x="4.364%" y="244" fill="#EB1C23"/><text x="4.614%" y="254.5">update (glances/plugins/glances_processcount.py:75)</text></g><g><title>update (glances/processes.py:391) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.636%" y="260" fill="#D23811"/></g><g><title>update (glances/plugins/glances_quicklook.py:75) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.818%" y="244" fill="#E0821D"/></g><g><title>virtual_memory (psutil/__init__.py:1963) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.818%" y="260" fill="#EBD408"/></g><g><title>virtual_memory (psutil/_pslinux.py:432) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.818%" y="276" fill="#DF2132"/></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="43.818%" y="292" fill="#DB950D"/></g><g><title>swap_memory (psutil/_pslinux.py:559) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="44%" y="276" fill="#FA9C1D"/></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="44%" y="292" fill="#D8C113"/></g><g><title>update (glances/plugins/glances_quicklook.py:77) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="44%" y="244" fill="#D8870E"/></g><g><title>swap_memory (psutil/__init__.py:1982) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="44%" y="260" fill="#F12F05"/></g><g><title>swap_memory (psutil/_pslinux.py:569) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="44.182%" y="276" fill="#E92A23"/></g><g><title>get_path (psutil/_pslinux.py:730) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="44.364%" y="308" fill="#E70D06"/></g><g><title>cpu_freq (psutil/_pslinux.py:737) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="44.364%" y="292" fill="#CFB528"/></g><g><title>get_path (psutil/_pslinux.py:732) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="44.545%" y="308" fill="#FEAD31"/></g><g><title>exists (genericpath.py:19) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="44.727%" y="324" fill="#DD0126"/></g><g><title>cat (psutil/_pslinux.py:292) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="45.455%" y="308" fill="#CE7C2E"/></g><g><title>open_binary (psutil/_common.py:711) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="45.455%" y="324" fill="#F9150B"/></g><g><title>cat (psutil/_pslinux.py:293) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="46.364%" y="308" fill="#DEC928"/></g><g><title>join (posixpath.py:77) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="47.091%" y="308" fill="#EB3D1D"/></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="47.273%" y="324" fill="#DBCF03"/></g><g><title>cpu_freq (psutil/_pslinux.py:742) (13 samples, 2.36%)</title><rect width="2.364%" height="15" x="45.273%" y="292" fill="#DE382E"/><text x="45.523%" y="302.5">cp..</text></g><g><title>join (posixpath.py:83) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="47.455%" y="308" fill="#EF4C36"/></g><g><title>cat (psutil/_pslinux.py:292) (13 samples, 2.36%)</title><rect width="2.364%" height="15" x="48%" y="308" fill="#E77C1B"/><text x="48.25%" y="318.5">ca..</text></g><g><title>open_binary (psutil/_common.py:711) (11 samples, 2.00%)</title><rect width="2%" height="15" x="48.364%" y="324" fill="#F9C306"/><text x="48.614%" y="334.5">o..</text></g><g><title>cat (psutil/_pslinux.py:293) (11 samples, 2.00%)</title><rect width="2%" height="15" x="50.364%" y="308" fill="#EDAE2F"/><text x="50.614%" y="318.5">c..</text></g><g><title>cpu_freq (psutil/_pslinux.py:751) (27 samples, 4.91%)</title><rect width="4.909%" height="15" x="47.636%" y="292" fill="#CEC91F"/><text x="47.886%" y="302.5">cpu_fr..</text></g><g><title>join (posixpath.py:83) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="52.364%" y="308" fill="#E73934"/></g><g><title>cat (psutil/_pslinux.py:292) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="52.909%" y="308" fill="#F8B116"/></g><g><title>open_binary (psutil/_common.py:711) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="52.909%" y="324" fill="#D7D325"/></g><g><title>cat (psutil/_pslinux.py:293) (7 samples, 1.27%)</title><rect width="1.273%" height="15" x="53.818%" y="308" fill="#F18033"/></g><g><title>cpu_freq (psutil/_pslinux.py:752) (15 samples, 2.73%)</title><rect width="2.727%" height="15" x="52.545%" y="292" fill="#E3A51F"/><text x="52.795%" y="302.5">cp..</text></g><g><title>join (posixpath.py:85) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="55.091%" y="308" fill="#E4A718"/></g><g><title>update (glances/plugins/glances_quicklook.py:83) (61 samples, 11.09%)</title><rect width="11.091%" height="15" x="44.364%" y="244" fill="#E48F0C"/><text x="44.614%" y="254.5">update (glances/..</text></g><g><title>get_info (glances/cpu_percent.py:68) (61 samples, 11.09%)</title><rect width="11.091%" height="15" x="44.364%" y="260" fill="#F99508"/><text x="44.614%" y="270.5">get_info (glance..</text></g><g><title>cpu_freq (psutil/__init__.py:1859) (61 samples, 11.09%)</title><rect width="11.091%" height="15" x="44.364%" y="276" fill="#F3232C"/><text x="44.614%" y="286.5">cpu_freq (psutil..</text></g><g><title>cpu_freq (psutil/_pslinux.py:753) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="55.273%" y="292" fill="#F65909"/></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="55.273%" y="308" fill="#E9D50D"/></g><g><title>update (glances/plugins/glances_quicklook.py:85) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="55.455%" y="244" fill="#E98D29"/></g><g><title>update (glances/plugins/glances_quicklook.py:92) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="55.636%" y="244" fill="#EFA704"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1248) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56%" y="324" fill="#D1D910"/></g><g><title>glob (glob.py:21) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56%" y="340" fill="#DB5823"/></g><g><title>_iglob (glob.py:73) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56%" y="356" fill="#DCC117"/></g><g><title>_iglob (glob.py:74) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56%" y="372" fill="#E65A34"/></g><g><title>_glob1 (glob.py:82) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56%" y="388" fill="#FC6A13"/></g><g><title>_iterdir (glob.py:126) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56%" y="404" fill="#CE4A14"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1252) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56.182%" y="324" fill="#E68A2C"/></g><g><title>glob (glob.py:21) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56.182%" y="340" fill="#EBB62B"/></g><g><title>_iglob (glob.py:74) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56.182%" y="356" fill="#F21033"/></g><g><title>_glob1 (glob.py:82) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56.182%" y="372" fill="#F80904"/></g><g><title>_iterdir (glob.py:124) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="56.182%" y="388" fill="#D21F16"/></g><g><title>cat (psutil/_pslinux.py:292) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="56.364%" y="340" fill="#EF3627"/></g><g><title>open_binary (psutil/_common.py:711) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="56.545%" y="356" fill="#E66329"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1270) (9 samples, 1.64%)</title><rect width="1.636%" height="15" x="56.364%" y="324" fill="#FD6A0C"/></g><g><title>cat (psutil/_pslinux.py:293) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="56.909%" y="340" fill="#D52E29"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1271) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="58%" y="324" fill="#D78523"/></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="58.182%" y="340" fill="#D51C05"/></g><g><title>open_text (psutil/_common.py:725) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="58.364%" y="356" fill="#D74D31"/></g><g><title>decode (codecs.py:321) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="59.091%" y="356" fill="#F86416"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1272) (7 samples, 1.27%)</title><rect width="1.273%" height="15" x="58.182%" y="324" fill="#D04309"/></g><g><title>cat (psutil/_pslinux.py:293) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="58.545%" y="340" fill="#DB8515"/></g><g><title>decode (codecs.py:322) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="59.273%" y="356" fill="#F62E1D"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1284) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="59.455%" y="324" fill="#F6B934"/></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="59.455%" y="340" fill="#FC880B"/></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="59.636%" y="356" fill="#DB8A35"/></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="59.818%" y="340" fill="#D33317"/></g><g><title>open_binary (psutil/_common.py:711) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="59.818%" y="356" fill="#F7DD1C"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1285) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="59.818%" y="324" fill="#FBDE2D"/></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="60.182%" y="340" fill="#D9A235"/></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="60.545%" y="340" fill="#E55D0E"/></g><g><title>open_text (psutil/_common.py:725) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="60.545%" y="356" fill="#D14331"/></g><g><title>__update__ (glances/plugins/glances_sensors.py:296) (29 samples, 5.27%)</title><rect width="5.273%" height="15" x="56%" y="276" fill="#D5571D"/><text x="56.25%" y="286.5">__upda..</text></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:313) (29 samples, 5.27%)</title><rect width="5.273%" height="15" x="56%" y="292" fill="#CD9734"/><text x="56.25%" y="302.5">build_..</text></g><g><title>sensors_temperatures (psutil/__init__.py:2240) (29 samples, 5.27%)</title><rect width="5.273%" height="15" x="56%" y="308" fill="#FDD727"/><text x="56.25%" y="318.5">sensor..</text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1286) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="60.364%" y="324" fill="#DDDC29"/></g><g><title>cat (psutil/_pslinux.py:293) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="60.909%" y="340" fill="#DA8515"/></g><g><title>update (glances/plugins/glances_sensors.py:102) (30 samples, 5.45%)</title><rect width="5.455%" height="15" x="56%" y="244" fill="#DDC12B"/><text x="56.25%" y="254.5">update ..</text></g><g><title>get (glances/plugins/glances_sensors.py:342) (30 samples, 5.45%)</title><rect width="5.455%" height="15" x="56%" y="260" fill="#F08034"/><text x="56.25%" y="270.5">get (gl..</text></g><g><title>__update__ (glances/plugins/glances_sensors.py:299) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.273%" y="276" fill="#FD720C"/></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:316) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.273%" y="292" fill="#D7DF2F"/></g><g><title>sensors_fans (psutil/__init__.py:2270) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.273%" y="308" fill="#F8E117"/></g><g><title>sensors_fans (psutil/_pslinux.py:1358) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.273%" y="324" fill="#FA6C00"/></g><g><title>glob (glob.py:21) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.273%" y="340" fill="#E4D007"/></g><g><title>_iglob (glob.py:43) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.273%" y="356" fill="#F42D0A"/></g><g><title>has_magic (glob.py:151) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.273%" y="372" fill="#CF7D19"/></g><g><title>fetch (glances/plugins/sensors/glances_hddtemp.py:144) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.455%" y="324" fill="#D2C312"/></g><g><title>update (glances/plugins/glances_sensors.py:111) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="61.455%" y="244" fill="#F9500C"/></g><g><title>wrapper (glances/plugins/glances_plugin.py:1052) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="61.455%" y="260" fill="#DD4109"/></g><g><title>update (glances/plugins/sensors/glances_hddtemp.py:64) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="61.455%" y="276" fill="#EB3124"/></g><g><title>get (glances/plugins/sensors/glances_hddtemp.py:166) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="61.455%" y="292" fill="#E12014"/></g><g><title>__update__ (glances/plugins/sensors/glances_hddtemp.py:106) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="61.455%" y="308" fill="#D78D2E"/></g><g><title>fetch (glances/plugins/sensors/glances_hddtemp.py:153) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.636%" y="324" fill="#FAA02F"/></g><g><title>debug (logging/__init__.py:1421) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.636%" y="340" fill="#D8DE28"/></g><g><title>isEnabledFor (logging/__init__.py:1685) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.636%" y="356" fill="#EAD927"/></g><g><title>sensors_battery (psutil/_pslinux.py:1398) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="61.818%" y="324" fill="#CFB228"/></g><g><title>cat (psutil/_pslinux.py:292) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="62%" y="356" fill="#DD880D"/></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="62%" y="372" fill="#F9C70A"/></g><g><title>sensors_battery (psutil/_pslinux.py:1408) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="62%" y="324" fill="#F9DE0D"/></g><g><title>multi_cat (psutil/_pslinux.py:1393) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="62%" y="340" fill="#F4B926"/></g><g><title>cat (psutil/_pslinux.py:293) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="62.182%" y="356" fill="#ECCA09"/></g><g><title>sensors_battery (psutil/_pslinux.py:1411) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="62.545%" y="324" fill="#FAE525"/></g><g><title>multi_cat (psutil/_pslinux.py:1393) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="62.545%" y="340" fill="#CEAE17"/></g><g><title>cat (psutil/_pslinux.py:292) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="62.545%" y="356" fill="#D3212B"/></g><g><title>open_binary (psutil/_common.py:711) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="62.545%" y="372" fill="#F53A32"/></g><g><title>cat (psutil/_pslinux.py:292) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.273%" y="356" fill="#F44424"/></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.273%" y="372" fill="#E8E50F"/></g><g><title>sensors_battery (psutil/_pslinux.py:1414) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="63.273%" y="324" fill="#FE1E17"/></g><g><title>multi_cat (psutil/_pslinux.py:1393) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="63.273%" y="340" fill="#EBA00E"/></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.455%" y="356" fill="#D49B2C"/></g><g><title>update (glances/plugins/glances_sensors.py:120) (11 samples, 2.00%)</title><rect width="2%" height="15" x="61.818%" y="244" fill="#E20232"/><text x="62.068%" y="254.5">u..</text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1052) (11 samples, 2.00%)</title><rect width="2%" height="15" x="61.818%" y="260" fill="#EAB106"/><text x="62.068%" y="270.5">w..</text></g><g><title>update (glances/plugins/sensors/glances_batpercent.py:74) (11 samples, 2.00%)</title><rect width="2%" height="15" x="61.818%" y="276" fill="#D91809"/><text x="62.068%" y="286.5">u..</text></g><g><title>update (glances/plugins/sensors/glances_batpercent.py:112) (11 samples, 2.00%)</title><rect width="2%" height="15" x="61.818%" y="292" fill="#DC0D2E"/><text x="62.068%" y="302.5">u..</text></g><g><title>sensors_battery (psutil/__init__.py:2288) (11 samples, 2.00%)</title><rect width="2%" height="15" x="61.818%" y="308" fill="#EFDD1B"/><text x="62.068%" y="318.5">s..</text></g><g><title>sensors_battery (psutil/_pslinux.py:1441) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.636%" y="324" fill="#DEC619"/></g><g><title>cat (psutil/_pslinux.py:292) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.636%" y="340" fill="#D3630D"/></g><g><title>open_text (psutil/_common.py:725) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.636%" y="356" fill="#E86F1F"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1252) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.818%" y="324" fill="#F55225"/></g><g><title>glob (glob.py:21) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.818%" y="340" fill="#E3952E"/></g><g><title>_iglob (glob.py:74) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.818%" y="356" fill="#DA2432"/></g><g><title>_glob1 (glob.py:82) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.818%" y="372" fill="#E25030"/></g><g><title>_iterdir (glob.py:123) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="63.818%" y="388" fill="#EEE00F"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1270) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="64%" y="324" fill="#F1880A"/></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="64%" y="340" fill="#D0202D"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1271) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="64.182%" y="324" fill="#CF8709"/></g><g><title>dirname (posixpath.py:155) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="64.182%" y="340" fill="#CE562C"/></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="64.364%" y="340" fill="#F5B10F"/></g><g><title>open_text (psutil/_common.py:725) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="64.364%" y="356" fill="#CE4032"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1272) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="64.364%" y="324" fill="#EA2428"/></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="64.727%" y="340" fill="#D54008"/></g><g><title>cat (psutil/_pslinux.py:292) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="64.909%" y="340" fill="#D24B24"/></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="64.909%" y="356" fill="#E55815"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1284) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="64.909%" y="324" fill="#FCCC2F"/></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.091%" y="340" fill="#D04D1B"/></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:313) (9 samples, 1.64%)</title><rect width="1.636%" height="15" x="63.818%" y="292" fill="#DD4C1A"/></g><g><title>sensors_temperatures (psutil/__init__.py:2240) (9 samples, 1.64%)</title><rect width="1.636%" height="15" x="63.818%" y="308" fill="#E18B12"/></g><g><title>sensors_temperatures (psutil/_pslinux.py:1286) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.273%" y="324" fill="#E6890B"/></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.273%" y="340" fill="#D41C01"/></g><g><title>__update__ (glances/plugins/glances_sensors.py:296) (10 samples, 1.82%)</title><rect width="1.818%" height="15" x="63.818%" y="276" fill="#F8A411"/><text x="64.068%" y="286.5">_..</text></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:325) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.454%" y="292" fill="#DEAB2A"/></g><g><title>wrapper (glances/plugins/glances_plugin.py:1052) (359 samples, 65.27%)</title><rect width="65.273%" height="15" x=".545%" y="228" fill="#F3542D"/><text x=".795%" y="238.5">wrapper (glances/plugins/glances_plugin.py:1052)</text></g><g><title>update (glances/plugins/glances_sensors.py:93) (11 samples, 2.00%)</title><rect width="2%" height="15" x="63.818%" y="244" fill="#FC3117"/><text x="64.068%" y="254.5">u..</text></g><g><title>get (glances/plugins/glances_sensors.py:342) (11 samples, 2.00%)</title><rect width="2%" height="15" x="63.818%" y="260" fill="#D71307"/><text x="64.068%" y="270.5">g..</text></g><g><title>__update__ (glances/plugins/glances_sensors.py:299) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.636%" y="276" fill="#EE5129"/></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:316) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.636%" y="292" fill="#D2C725"/></g><g><title>sensors_fans (psutil/__init__.py:2270) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.636%" y="308" fill="#F4C031"/></g><g><title>sensors_fans (psutil/_pslinux.py:1358) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.636%" y="324" fill="#E2D30B"/></g><g><title>wrapper (glances/plugins/glances_plugin.py:1053) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.818%" y="228" fill="#ECA236"/></g><g><title>get (glances/timer.py:83) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="65.818%" y="244" fill="#DCE509"/></g><g><title>wrapper (glances/plugins/glances_plugin.py:1037) (367 samples, 66.73%)</title><rect width="66.727%" height="15" x=".364%" y="212" fill="#FA5716"/><text x=".614%" y="222.5">wrapper (glances/plugins/glances_plugin.py:1037)</text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1054) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="66%" y="228" fill="#EF2B11"/></g><g><title>debug (logging/__init__.py:1421) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="66.909%" y="244" fill="#E7B119"/></g><g><title>wrapper (glances/plugins/glances_plugin.py:1039) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.091%" y="212" fill="#DBB301"/></g><g><title>get_refresh (glances/plugins/glances_plugin.py:596) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.091%" y="228" fill="#EEDB35"/></g><g><title>get_limits (glances/plugins/glances_plugin.py:614) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.091%" y="244" fill="#E8A724"/></g><g><title>cpu_count_physical (psutil/_pslinux.py:670) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.273%" y="260" fill="#F41333"/></g><g><title>glob (glob.py:21) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.273%" y="276" fill="#E00616"/></g><g><title>_iglob (glob.py:73) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.273%" y="292" fill="#E09105"/></g><g><title>_iglob (glob.py:73) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.273%" y="308" fill="#EA8231"/></g><g><title>_iglob (glob.py:74) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.273%" y="324" fill="#FE0602"/></g><g><title>_glob1 (glob.py:82) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.273%" y="340" fill="#D0602E"/></g><g><title>_iterdir (glob.py:123) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.273%" y="356" fill="#EF0327"/></g><g><title>update (glances/stats.py:230) (370 samples, 67.27%)</title><rect width="67.273%" height="15" x=".364%" y="196" fill="#E9D201"/><text x=".614%" y="206.5">update (glances/stats.py:230)</text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1052) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="67.273%" y="212" fill="#F48925"/></g><g><title>update (glances/plugins/glances_core.py:63) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="67.273%" y="228" fill="#F08802"/></g><g><title>cpu_count (psutil/__init__.py:1578) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="67.273%" y="244" fill="#EF1225"/></g><g><title>cpu_count_physical (psutil/_pslinux.py:671) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.454%" y="260" fill="#DAB916"/></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.454%" y="276" fill="#E1DA04"/></g><g><title>update (glances/stats.py:232) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.636%" y="196" fill="#E6B620"/></g><g><title>update_stats_history (glances/plugins/glances_plugin.py:198) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.636%" y="212" fill="#F2382B"/></g><g><title>add (glances/history.py:45) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.636%" y="228" fill="#E96318"/></g><g><title>value (glances/attribute.py:85) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.636%" y="244" fill="#EAD12A"/></g><g><title>update_views (glances/plugins/glances_memswap.py:138) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="67.818%" y="212" fill="#E3070C"/></g><g><title>update_views (glances/plugins/glances_plugin.py:498) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="68%" y="228" fill="#F5CB2B"/></g><g><title>update_views (glances/plugins/glances_plugin.py:503) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="68.182%" y="228" fill="#EECD21"/></g><g><title>update_views (glances/plugins/glances_plugin.py:504) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="68.546%" y="228" fill="#E73807"/></g><g><title>update_views (glances/plugins/glances_network.py:235) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="68%" y="212" fill="#F4BA1D"/></g><g><title>update_views (glances/plugins/glances_plugin.py:516) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="68.727%" y="228" fill="#EA6F1F"/></g><g><title>update_views (glances/plugins/glances_plugin.py:492) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="68.909%" y="212" fill="#F1950A"/></g><g><title>update_views (glances/plugins/glances_plugin.py:497) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="69.091%" y="212" fill="#F9CE2C"/></g><g><title>update_views (glances/plugins/glances_plugin.py:498) (14 samples, 2.55%)</title><rect width="2.546%" height="15" x="69.454%" y="212" fill="#FB991E"/><text x="69.704%" y="222.5">up..</text></g><g><title>update_views (glances/plugins/glances_plugin.py:503) (20 samples, 3.64%)</title><rect width="3.636%" height="15" x="72%" y="212" fill="#EF9826"/><text x="72.25%" y="222.5">upda..</text></g><g><title>get_key (glances/plugins/glances_processlist.py:131) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="75.454%" y="228" fill="#F98B2F"/></g><g><title>update_views (glances/plugins/glances_plugin.py:504) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="75.636%" y="212" fill="#F44023"/></g><g><title>update_views (glances/plugins/glances_plugin.py:516) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="75.818%" y="212" fill="#D82E0F"/></g><g><title>update_views (glances/plugins/glances_quicklook.py:105) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="76.909%" y="212" fill="#FA4A13"/></g><g><title>get_alert (glances/plugins/glances_plugin.py:694) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="76.909%" y="228" fill="#F92A21"/></g><g><title>get_limit_log (glances/plugins/glances_plugin.py:819) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="76.909%" y="244" fill="#F29511"/></g><g><title>update_views (glances/plugins/glances_plugin.py:508) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="77.091%" y="228" fill="#F41D15"/></g><g><title>update_views (glances/plugins/glances_quicklook.py:99) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="77.091%" y="212" fill="#DC8225"/></g><g><title>update_views (glances/plugins/glances_plugin.py:513) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="77.454%" y="228" fill="#D34302"/></g><g><title>__serve_once (glances/standalone.py:135) (426 samples, 77.45%)</title><rect width="77.454%" height="15" x=".364%" y="180" fill="#EB4434"/><text x=".614%" y="190.5">__serve_once (glances/standalone.py:135)</text></g><g><title>update (glances/stats.py:234) (55 samples, 10.00%)</title><rect width="10%" height="15" x="67.818%" y="196" fill="#F68E03"/><text x="68.068%" y="206.5">update (glance..</text></g><g><title>update_views (glances/plugins/glances_sensors.py:170) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="77.636%" y="212" fill="#F11907"/></g><g><title>update_views (glances/plugins/glances_plugin.py:503) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="77.636%" y="228" fill="#F27727"/></g><g><title>get_stats_display (glances/plugins/glances_plugin.py:902) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.182%" y="260" fill="#F1622D"/></g><g><title>msg_curse (glances/plugins/glances_diskio.py:196) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.182%" y="276" fill="#FE1C1E"/></g><g><title>msg_curse (glances/plugins/glances_cpu.py:234) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.364%" y="276" fill="#F18E36"/></g><g><title>get_trend (glances/plugins/glances_plugin.py:286) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.364%" y="292" fill="#DE550F"/></g><g><title>mean (statistics.py:318) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.364%" y="308" fill="#D2552F"/></g><g><title>msg_curse (glances/plugins/glances_cpu.py:256) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.546%" y="276" fill="#E0CE19"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:996) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.546%" y="292" fill="#F3C913"/></g><g><title>msg_curse (glances/plugins/glances_mem.py:189) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.727%" y="276" fill="#EC3B04"/></g><g><title>get_trend (glances/plugins/glances_plugin.py:286) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.727%" y="292" fill="#FEB32D"/></g><g><title>mean (statistics.py:316) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.727%" y="308" fill="#E20E0A"/></g><g><title>_sum (statistics.py:177) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.727%" y="324" fill="#F41B29"/></g><g><title>&lt;genexpr&gt; (statistics.py:177) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.727%" y="340" fill="#EB2320"/></g><g><title>msg_curse (glances/plugins/glances_mem.py:215) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="78.909%" y="276" fill="#DA441F"/></g><g><title>get_trend (glances/plugins/glances_plugin.py:285) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="79.091%" y="292" fill="#CF7825"/></g><g><title>&lt;listcomp&gt; (glances/plugins/glances_plugin.py:285) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="79.091%" y="308" fill="#E36200"/></g><g><title>display (glances/outputs/glances_curses.py:577) (8 samples, 1.45%)</title><rect width="1.454%" height="15" x="78%" y="228" fill="#CF0703"/></g><g><title>__get_stat_display (glances/outputs/glances_curses.py:550) (8 samples, 1.45%)</title><rect width="1.454%" height="15" x="78%" y="244" fill="#CE6213"/></g><g><title>get_stats_display (glances/plugins/glances_plugin.py:906) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="78.364%" y="260" fill="#D9051A"/></g><g><title>msg_curse (glances/plugins/glances_memswap.py:158) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="79.091%" y="276" fill="#EBBE26"/></g><g><title>get_trend (glances/plugins/glances_plugin.py:286) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="79.273%" y="292" fill="#F75618"/></g><g><title>mean (statistics.py:316) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="79.273%" y="308" fill="#CD6510"/></g><g><title>_sum (statistics.py:177) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="79.273%" y="324" fill="#F6A821"/></g><g><title>display (glances/outputs/glances_curses.py:582) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="79.454%" y="228" fill="#E77201"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:380) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="80%" y="276" fill="#CFB835"/></g><g><title>_get_process_curses_cpu (glances/plugins/glances_processlist.py:180) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="80.182%" y="292" fill="#E05F33"/></g><g><title>key_exist_value_not_none_not_v (glances/compat.py:285) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="80.182%" y="308" fill="#D4BC2D"/></g><g><title>_get_process_curses_cpu (glances/plugins/glances_processlist.py:181) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="80.364%" y="292" fill="#DF9A26"/></g><g><title>get_alert (glances/plugins/glances_plugin.py:675) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="80.727%" y="308" fill="#FB1634"/></g><g><title>_get_process_curses_cpu (glances/plugins/glances_processlist.py:187) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="80.727%" y="292" fill="#E5D116"/></g><g><title>get_alert (glances/plugins/glances_plugin.py:705) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="80.909%" y="308" fill="#EA8A22"/></g><g><title>manage_action (glances/plugins/glances_plugin.py:724) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="80.909%" y="324" fill="#D45F0B"/></g><g><title>get_limit_action (glances/plugins/glances_plugin.py:800) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="80.909%" y="340" fill="#F0B32F"/></g><g><title>_get_process_curses_cpu (glances/plugins/glances_processlist.py:190) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="81.091%" y="292" fill="#F0A30B"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:384) (8 samples, 1.45%)</title><rect width="1.454%" height="15" x="80.182%" y="276" fill="#EC250C"/></g><g><title>_get_process_curses_cpu (glances/plugins/glances_processlist.py:192) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="81.273%" y="292" fill="#E8A410"/></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:939) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="81.454%" y="308" fill="#F4CD0F"/></g><g><title>_get_process_curses_mem (glances/plugins/glances_processlist.py:202) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="81.636%" y="292" fill="#DF752F"/></g><g><title>get_alert (glances/plugins/glances_plugin.py:694) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="81.818%" y="308" fill="#F46B23"/></g><g><title>get_limit_log (glances/plugins/glances_plugin.py:819) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="81.818%" y="324" fill="#CD8C08"/></g><g><title>get_alert (glances/plugins/glances_plugin.py:702) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82%" y="308" fill="#E4542E"/></g><g><title>manage_threshold (glances/plugins/glances_plugin.py:714) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82%" y="324" fill="#FEBC09"/></g><g><title>add (glances/thresholds.py:58) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82%" y="340" fill="#CE7036"/></g><g><title>manage_action (glances/plugins/glances_plugin.py:724) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82.182%" y="324" fill="#D85431"/></g><g><title>_get_process_curses_mem (glances/plugins/glances_processlist.py:203) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="81.818%" y="292" fill="#D6C223"/></g><g><title>get_alert (glances/plugins/glances_plugin.py:705) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="82.182%" y="308" fill="#F91C03"/></g><g><title>manage_action (glances/plugins/glances_plugin.py:727) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82.364%" y="324" fill="#DE3834"/></g><g><title>set (glances/actions.py:63) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82.364%" y="340" fill="#F5D932"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:387) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="81.636%" y="276" fill="#D5C918"/></g><g><title>_get_process_curses_mem (glances/plugins/glances_processlist.py:208) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82.546%" y="292" fill="#F8741C"/></g><g><title>_get_process_curses_vms (glances/plugins/glances_processlist.py:217) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="82.727%" y="292" fill="#DB482B"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:1010) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="83.091%" y="308" fill="#D18A0E"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:985) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="83.454%" y="308" fill="#DE1221"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:995) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="83.636%" y="308" fill="#D5C707"/></g><g><title>_get_process_curses_vms (glances/plugins/glances_processlist.py:219) (10 samples, 1.82%)</title><rect width="1.818%" height="15" x="82.909%" y="292" fill="#FA6E0A"/><text x="83.159%" y="302.5">_..</text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:996) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="83.818%" y="308" fill="#F87B06"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:388) (12 samples, 2.18%)</title><rect width="2.182%" height="15" x="82.727%" y="276" fill="#CE5B1F"/><text x="82.977%" y="286.5">g..</text></g><g><title>_get_process_curses_vms (glances/plugins/glances_processlist.py:220) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="84.727%" y="292" fill="#D39A0D"/></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:939) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="84.727%" y="308" fill="#E19407"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:1010) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="84.909%" y="308" fill="#DCA02B"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:982) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="85.454%" y="308" fill="#D53427"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:984) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="85.636%" y="308" fill="#F38907"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:389) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="84.909%" y="276" fill="#E64F0D"/></g><g><title>_get_process_curses_rss (glances/plugins/glances_processlist.py:231) (6 samples, 1.09%)</title><rect width="1.091%" height="15" x="84.909%" y="292" fill="#F76917"/></g><g><title>auto_unit (glances/plugins/glances_plugin.py:996) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="85.818%" y="308" fill="#DFB329"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:392) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="86%" y="276" fill="#DA0922"/></g><g><title>__max_pid_size (glances/plugins/glances_processlist.py:763) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="86.364%" y="292" fill="#DE6A08"/></g><g><title>_get_process_curses_username (glances/plugins/glances_processlist.py:244) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="86.727%" y="292" fill="#D3DC00"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:396) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="86.727%" y="276" fill="#E53410"/></g><g><title>_get_process_curses_username (glances/plugins/glances_processlist.py:245) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="86.909%" y="292" fill="#D49B12"/></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:256) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="87.273%" y="292" fill="#F2150E"/></g><g><title>seconds_to_hms (glances/plugins/glances_processlist.py:35) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="87.454%" y="308" fill="#DE1330"/></g><g><title>seconds_to_hms (glances/plugins/glances_processlist.py:39) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="87.818%" y="308" fill="#E82D1B"/></g><g><title>seconds_to_hms (glances/plugins/glances_processlist.py:40) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="88%" y="308" fill="#F9672A"/></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:266) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="87.454%" y="292" fill="#F65121"/></g><g><title>seconds_to_hms (glances/plugins/glances_processlist.py:42) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="88.182%" y="308" fill="#FC212A"/></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:272) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="88.364%" y="292" fill="#D1D429"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:399) (9 samples, 1.64%)</title><rect width="1.636%" height="15" x="87.091%" y="276" fill="#CF9A06"/></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:273) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="88.546%" y="292" fill="#DF402F"/></g><g><title>_get_process_curses_thread (glances/plugins/glances_processlist.py:285) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="88.727%" y="292" fill="#D3A126"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:402) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="88.727%" y="276" fill="#DB8A28"/></g><g><title>_get_process_curses_thread (glances/plugins/glances_processlist.py:290) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="88.909%" y="292" fill="#F1E42E"/></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:939) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="88.909%" y="308" fill="#DFD126"/></g><g><title>get_limit (glances/plugins/glances_plugin.py:777) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="90%" y="324" fill="#ECA42D"/></g><g><title>get_nice_alert (glances/plugins/glances_processlist.py:161) (5 samples, 0.91%)</title><rect width=".909%" height="15" x="89.818%" y="308" fill="#E70F05"/></g><g><title>get_limit (glances/plugins/glances_plugin.py:778) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="90.182%" y="324" fill="#FC230F"/></g><g><title>get_limit (glances/plugins/glances_plugin.py:778) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="90.727%" y="324" fill="#F8B512"/></g><g><title>get_nice_alert (glances/plugins/glances_processlist.py:166) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="90.727%" y="308" fill="#E9272A"/></g><g><title>get_limit (glances/plugins/glances_plugin.py:779) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="90.909%" y="324" fill="#EE6E21"/></g><g><title>get_limit (glances/plugins/glances_plugin.py:778) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="91.091%" y="324" fill="#E9C30A"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:405) (11 samples, 2.00%)</title><rect width="2%" height="15" x="89.636%" y="276" fill="#FE6903"/><text x="89.886%" y="286.5">g..</text></g><g><title>_get_process_curses_nice (glances/plugins/glances_processlist.py:305) (11 samples, 2.00%)</title><rect width="2%" height="15" x="89.636%" y="292" fill="#DDE109"/><text x="89.886%" y="302.5">_..</text></g><g><title>get_nice_alert (glances/plugins/glances_processlist.py:171) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="91.091%" y="308" fill="#E0E32D"/></g><g><title>get_limit (glances/plugins/glances_plugin.py:779) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="91.273%" y="324" fill="#E5C62B"/></g><g><title>_get_process_curses_status (glances/plugins/glances_processlist.py:316) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="91.636%" y="292" fill="#CED123"/></g><g><title>_get_process_curses_status (glances/plugins/glances_processlist.py:317) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="91.818%" y="292" fill="#F5C335"/></g><g><title>_get_process_curses_status (glances/plugins/glances_processlist.py:318) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92%" y="292" fill="#F05C1A"/></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:939) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92%" y="308" fill="#CF2817"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:408) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="91.636%" y="276" fill="#DF6F23"/></g><g><title>_get_process_curses_status (glances/plugins/glances_processlist.py:320) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92.182%" y="292" fill="#E5931C"/></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:939) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92.182%" y="308" fill="#D31D1C"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:412) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92.364%" y="276" fill="#E44821"/></g><g><title>_get_process_curses_io_write (glances/plugins/glances_processlist.py:366) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92.364%" y="292" fill="#CDD61F"/></g><g><title>split_cmdline (glances/plugins/glances_processlist.py:47) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="92.546%" y="292" fill="#E06F0F"/></g><g><title>split (posixpath.py:104) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92.727%" y="308" fill="#FD151A"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:424) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="92.546%" y="276" fill="#F58B2B"/></g><g><title>split_cmdline (glances/plugins/glances_processlist.py:48) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="92.909%" y="292" fill="#FCAA07"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:428) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="93.091%" y="276" fill="#E7760E"/></g><g><title>isdir (genericpath.py:42) (3 samples, 0.55%)</title><rect width=".545%" height="15" x="93.091%" y="292" fill="#EE5300"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:434) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="93.636%" y="276" fill="#DD2727"/></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:435) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="93.818%" y="276" fill="#DE772E"/></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:939) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="93.818%" y="292" fill="#DEA531"/></g><g><title>display (glances/outputs/glances_curses.py:604) (80 samples, 14.55%)</title><rect width="14.546%" height="15" x="79.636%" y="228" fill="#DB7134"/><text x="79.886%" y="238.5">display (glances/outpu..</text></g><g><title>get_stats_display (glances/plugins/glances_plugin.py:906) (80 samples, 14.55%)</title><rect width="14.546%" height="15" x="79.636%" y="244" fill="#D6070F"/><text x="79.886%" y="254.5">get_stats_display (gla..</text></g><g><title>msg_curse (glances/plugins/glances_processlist.py:538) (80 samples, 14.55%)</title><rect width="14.546%" height="15" x="79.636%" y="260" fill="#EB2004"/><text x="79.886%" y="270.5">msg_curse (glances/plu..</text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:441) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="94%" y="276" fill="#EE5A36"/></g><g><title>display (glances/outputs/glances_curses.py:622) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="94.182%" y="228" fill="#D5D013"/></g><g><title>__display_header (glances/outputs/glances_curses.py:701) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="94.182%" y="244" fill="#E99C04"/></g><g><title>new_line (glances/outputs/glances_curses.py:514) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="94.182%" y="260" fill="#CFC205"/></g><g><title>display_plugin (glances/outputs/glances_curses.py:1009) (2 samples, 0.36%)</title><rect width=".364%" height="15" x="94.364%" y="260" fill="#CE6F1E"/></g><g><title>display_plugin (glances/outputs/glances_curses.py:1023) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="94.727%" y="260" fill="#F34636"/></g><g><title>update (glances/outputs/glances_curses.py:1077) (95 samples, 17.27%)</title><rect width="17.273%" height="15" x="77.818%" y="196" fill="#F21C08"/><text x="78.068%" y="206.5">update (glances/outputs/gla..</text></g><g><title>flush (glances/outputs/glances_curses.py:1052) (95 samples, 17.27%)</title><rect width="17.273%" height="15" x="77.818%" y="212" fill="#DB6A12"/><text x="78.068%" y="222.5">flush (glances/outputs/glan..</text></g><g><title>display (glances/outputs/glances_curses.py:637) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="94.364%" y="228" fill="#F4DE0A"/></g><g><title>__display_right (glances/outputs/glances_curses.py:833) (4 samples, 0.73%)</title><rect width=".727%" height="15" x="94.364%" y="244" fill="#ECB334"/></g><g><title>display_plugin (glances/outputs/glances_curses.py:984) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="94.909%" y="260" fill="#D51727"/></g><g><title>update (glances/outputs/glances_curses.py:1090) (1 samples, 0.18%)</title><rect width=".182%" height="15" x="95.091%" y="196" fill="#EE300A"/></g><g><title>all (550 samples, 100%)</title><rect width="100%" height="15" x="0%" y="52" fill="#FBC417"/></g><g><title>process 2656063:&quot;./venv/bin/python -m glances -C ./conf/glances.conf&quot; (550 samples, 100.00%)</title><rect width="100%" height="15" x="0%" y="68" fill="#FA9818"/><text x=".25%" y="78.5">process 2656063:&quot;./venv/bin/python -m glances -C ./conf/glances.conf&quot;</text></g><g><title>_run_module_as_main (runpy.py:194) (548 samples, 99.64%)</title><rect width="99.636%" height="15" x=".364%" y="84" fill="#D19611"/><text x=".614%" y="94.5">_run_module_as_main (runpy.py:194)</text></g><g><title>_run_code (runpy.py:87) (548 samples, 99.64%)</title><rect width="99.636%" height="15" x=".364%" y="100" fill="#EACA22"/><text x=".614%" y="110.5">_run_code (runpy.py:87)</text></g><g><title>&lt;module&gt; (glances/__main__.py:29) (548 samples, 99.64%)</title><rect width="99.636%" height="15" x=".364%" y="116" fill="#FD9435"/><text x=".614%" y="126.5">&lt;module&gt; (glances/__main__.py:29)</text></g><g><title>main (glances/__init__.py:149) (548 samples, 99.64%)</title><rect width="99.636%" height="15" x=".364%" y="132" fill="#DA8110"/><text x=".614%" y="142.5">main (glances/__init__.py:149)</text></g><g><title>start (glances/__init__.py:118) (548 samples, 99.64%)</title><rect width="99.636%" height="15" x=".364%" y="148" fill="#D85513"/><text x=".614%" y="158.5">start (glances/__init__.py:118)</text></g><g><title>serve_forever (glances/standalone.py:168) (548 samples, 99.64%)</title><rect width="99.636%" height="15" x=".364%" y="164" fill="#EBE407"/><text x=".614%" y="174.5">serve_forever (glances/standalone.py:168)</text></g><g><title>__serve_once (glances/standalone.py:153) (122 samples, 22.18%)</title><rect width="22.182%" height="15" x="77.818%" y="180" fill="#F5AF00"/><text x="78.068%" y="190.5">__serve_once (glances/standalone.py..</text></g><g><title>update (glances/outputs/glances_curses.py:1092) (26 samples, 4.73%)</title><rect width="4.727%" height="15" x="95.273%" y="196" fill="#D0A824"/><text x="95.523%" y="206.5">update..</text></g><g><title>__catch_key (glances/outputs/glances_curses.py:346) (26 samples, 4.73%)</title><rect width="4.727%" height="15" x="95.273%" y="212" fill="#F6AB18"/><text x="95.523%" y="222.5">__catc..</text></g><g><title>get_key (glances/outputs/glances_curses.py:341) (26 samples, 4.73%)</title><rect width="4.727%" height="15" x="95.273%" y="228" fill="#D78E18"/><text x="95.523%" y="238.5">get_ke..</text></g></svg></svg>